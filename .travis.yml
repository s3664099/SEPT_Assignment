# this must be in the root

sudo: required
version: '2.7'
cache:
  directories:
  - "$HOME/google-cloud-sdk"
env:
  global:
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1
  - NO_GCE_CHECK=true
services:
- docker
language: java
node_js:
- stable
git:
  quiet: true
branches:
  only:
  - twopods
script:
- export GOOGLE_APPLICATION_CREDENTIALS=client-secret.json
- cd restful-web-services/
- mvn clean install -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
  -DskipTests
- cd ../
#skipping test don't worry about this part
- cd ./frontend/todo-app/
- cd ../..
- docker-compose build
- docker tag tagname/high5-app/client:latest
- docker tag tagname/high5-app/server:latest
- docker push docker.io/high5-app/client
- docker push docker.io/high5-app/server
- kubectl scale deployment high5softwarept --replicas=0 -n default
- kubectl scale deployment high5softwarept --replicas=3 -n default
before_install:
- openssl aes-256-cbc -K $encrypted_b55655e464c7_key -iv $encrypted_b55655e464c7_iv 
  -in credentials.tar.gz.enc -out credentials.tar.gz -d
- tar -xzf credentials.tar.gz
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf "$HOME/google-cloud-sdk";
  curl https://sdk.cloud.google.com | bash > /dev/null; fi
- source $HOME/google-cloud-sdk/path.bash.inc
- gcloud components update kubectl
- gcloud auth activate-service-account --key-file client-secret.json
- gcloud config set project high5softwarept
- gcloud auth list
- gcloud container clusters get-credentials high5-cluster --zone australia-southeast1-c --project high5softwarept
notifications:
  email: false