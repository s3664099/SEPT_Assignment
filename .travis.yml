sudo: required
version: '2.7'

language:
  - minimal

services:
  - docker
  
cache:
  directories:
    - "$HOME/gcloud-cloud-sdk/"

env:
  global:
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
    - NO_GCE_CHECK=true

git:
  quiet: true

branches:
  only:
    - master
    - development
    
before_install:
  - docker build -t gcr.io/high5softwarept/high5app .
  - docker run -d gcr.io/high5softwarept/high5app
  
  # [START auth]
  # Decrypt the credentials we added to the repo using the key we added with the Travis command line tool

  - if [ ! -d $HOME/google-cloud-sdk/bin ]; then
    rm -rf "$HOME/google-cloud-sdk";
    curl https://sdk.cloud.google.com | bash > /dev/null;
    fi
  
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl

  - openssl aes-256-cbc -K $encrypted_b55655e464c7_key -iv $encrypted_b55655e464c7_iv 
    -in credentials.tar.gz.enc -out credentials.tar.gz -d
  - tar -xzf credentials.tar.gz
 
  - gcloud auth activate-service-account --key-file client-secret.json
  - gcloud config list
  - kubectl scale deployment gcr.io/high5softwarept/high5app --replicas=2 -n default
  
install:
  # Set the correct project to deploy to
  - gcloud config set project high5softwarept 
  - docker ps

script:
  - docker push gcr.io/high5softwarept/high5app
  - gcloud config compute/zone australia-southeast1-c
  - gcloud container clusters create high5-cluster --num-nodes=2
  - gcloud compute instances list
  - kubectl create deployment high5-web --image=gcr.io/high5softwarept/high5app
  - kubectl get pods
  - kubectl expose deployment hello-web --type=LoadBalancer --port 80 --target-port 8080

notifications:
  email: false

dd:
  - openssl aes-256-cbc -K $encrypted_988292aa886d_key -iv $encrypted_988292aa886d_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d
    - in client-secret.json.enc -out client-secret.json -deployment  






