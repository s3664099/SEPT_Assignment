{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { API_URL, JPA_API_URL } from '../../Constants';\n\nvar WallDataService =\n/*#__PURE__*/\nfunction () {\n  function WallDataService() {\n    _classCallCheck(this, WallDataService);\n  }\n\n  _createClass(WallDataService, [{\n    key: \"retrieveAllVisiblePosts\",\n    value: function retrieveAllVisiblePosts(name) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(studentId, \"/PostVisible\"));\n    } //If the request is successful, a message advising the success is sent\n    //otherwise a bad requet is recieved and sent\n\n  }, {\n    key: \"deletePost\",\n    value: function deletePost(name, id) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(studentId, \"/Posts/\").concat(id), result);\n    }\n  }, {\n    key: \"retrievePost\",\n    value: function retrievePost(name, id) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(studentId, \"/Posts/\").concat(id));\n    } //the new post is sent to the server. If the student Ids don't match\n    //a bad request is returned\n\n  }, {\n    key: \"createPost\",\n    value: function createPost(name, post) {\n      //console.log('executed service')\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(studentId, \"/Posts\"), post);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(name, post, parentPostId) {\n      //console.log('executed service')\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(studentId, \"/Posts/\").concat(parentPostId), post);\n    }\n  }, {\n    key: \"editPost\",\n    value: function editPost(name, post) {\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(studentId, \"/Posts\"), post);\n    }\n  }]);\n\n  return WallDataService;\n}();","map":{"version":3,"sources":["C:\\Users\\apple\\Downloads\\RMIT\\SEPT\\NewVersion\\High5\\frontend\\todo-app\\src\\api\\todo\\WallDataService.js"],"names":["axios","API_URL","JPA_API_URL","WallDataService","name","get","studentId","id","result","post","parentPostId"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC;;IAEMC,e;;;;;;;;;4CAGsBC,I,EAAM;AAC1B;AACA,aAAOJ,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCI,SAAlC,kBAAP;AACH,K,CAED;AACA;;;;+BACWF,I,EAAMG,E,EAAI;AAEpB;AACG,aAAOP,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCI,SAAlC,oBAAqDC,EAArD,GAA2DC,MAA3D,CAAP;AACH;;;iCAEYJ,I,EAAMG,E,EAAI;AACnB;AACA,aAAOP,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCI,SAAlC,oBAAqDC,EAArD,EAAP;AACH,K,CAED;AACA;;;;+BACWH,I,EAAMK,I,EAAM;AACnB;AACA,aAAOT,KAAK,CAACS,IAAN,WAAcP,WAAd,oBAAmCI,SAAnC,aAAsDG,IAAtD,CAAP;AACH;;;kCAEaL,I,EAAMK,I,EAAMC,Y,EAAc;AACxC;AACI,aAAOV,KAAK,CAACS,IAAN,WAAcP,WAAd,oBAAmCI,SAAnC,oBAAsDI,YAAtD,GAAsED,IAAtE,CAAP;AACH;;;6BAEQL,I,EAAMK,I,EAAM;AACpB,aAAOT,KAAK,CAACS,IAAN,WAAcP,WAAd,oBAAmCI,SAAnC,aAAsDG,IAAtD,CAAP;AACA","sourcesContent":["import axios from 'axios'\r\nimport { API_URL, JPA_API_URL } from '../../Constants'\r\n\r\nclass WallDataService {\r\n\r\n\r\n    retrieveAllVisiblePosts(name) {\r\n        //console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${studentId}/PostVisible`);\r\n    }\r\n\r\n    //If the request is successful, a message advising the success is sent\r\n    //otherwise a bad requet is recieved and sent\r\n    deletePost(name, id) {\r\n\r\n    \t//console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${studentId}/Posts/${id}`, result);\r\n    }\r\n\r\n    retrievePost(name, id) {\r\n        //console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${studentId}/Posts/${id}`);\r\n    }\r\n\r\n    //the new post is sent to the server. If the student Ids don't match\r\n    //a bad request is returned\r\n    createPost(name, post) {\r\n        //console.log('executed service')\r\n        return axios.post(`${JPA_API_URL}/users/${studentId}/Posts`, post);\r\n    }\r\n\r\n    createComment(name, post, parentPostId) {\r\n    //console.log('executed service')\r\n        return axios.post(`${JPA_API_URL}/users/${studentId}/Posts/${parentPostId}`, post);\r\n    }\r\n\r\n    editPost(name, post) {\r\n    \treturn axios.post(`${JPA_API_URL}/users/${studentId}/Posts`, post);\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}