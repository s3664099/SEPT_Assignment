{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\apple\\\\Downloads\\\\RMIT\\\\SEPT\\\\NewVersion\\\\High5\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar LoginComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginComponent, _Component);\n\n  function LoginComponent(props) {\n    var _this;\n\n    _classCallCheck(this, LoginComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginComponent).call(this, props));\n    _this.state = {\n      username: 'sept',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n      // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loginClicked = _this.loginClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      //console.log(this.state);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleUsernameChange\",\n    value: function handleUsernameChange(event) {\n      console.log(event.target.name);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(event) {\n      console.log(event.target.value);\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"loginClicked\",\n    value: function loginClicked() {\n      var _this2 = this;\n\n      //sept,dummy\n      //Hard coded username and password authentication \n      if (this.state.username === 'josh' && this.state.password === 'dummy') {\n        AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n        this.props.history.push(\"/welcome/\".concat(this.state.username));\n        this.setState({\n          showSuccessMessage: true\n        });\n        this.setState({\n          hasLoginFailed: false\n        });\n      } else {\n        this.setState({\n          showSuccessMessage: false\n        });\n        this.setState({\n          hasLoginFailed: true\n        });\n      }\n\n      AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(function () {\n        AuthenticationService.registerSuccessfulLogin(_this2.state.username, _this2.state.password);\n\n        _this2.props.history.push(\"/welcome/\".concat(_this2.state.username));\n      }).catch(function () {\n        _this2.setState({\n          showSuccessMessage: false\n        });\n\n        _this2.setState({\n          hasLoginFailed: true\n        });\n      });\n      AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(function (response) {\n        AuthenticationService.registerSuccessfulLoginForJwt(_this2.state.username, response.data.token);\n\n        _this2.props.history.push(\"/welcome/\".concat(_this2.state.username));\n      }).catch(function () {\n        _this2.setState({\n          showSuccessMessage: false\n        });\n\n        _this2.setState({\n          hasLoginFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.hasLoginFailed && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Invalid Credentials or something is wrong\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Login Sucessful\"), \"User Name: \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), \"Password: \", React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.loginClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginComponent;\n}(Component);\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:\\Users\\apple\\Downloads\\RMIT\\SEPT\\NewVersion\\High5\\frontend\\todo-app\\src\\components\\todo\\LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","console","log","registerSuccessfulLogin","history","push","executeBasicAuthenticationService","then","catch","executeJwtAuthenticationService","response","registerSuccessfulLoginForJwt","data","token"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: 'sept',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\r\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        //console.log(this.state);\r\n        this.setState(\r\n            {\r\n                [event.target.name]\r\n                    : event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handleUsernameChange(event) {\r\n        console.log(event.target.name);\r\n        this.setState(\r\n            {\r\n                [event.target.name]\r\n                  :event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        console.log(event.target.value);\r\n        this.setState({password:event.target.value})\r\n    }\r\n\r\n    loginClicked() {\r\n        //sept,dummy\r\n\r\n        //Hard coded username and password authentication \r\n        if(this.state.username==='josh' && this.state.password==='dummy'){\r\n            AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\r\n            this.props.history.push(`/welcome/${this.state.username}`)\r\n            this.setState({showSuccessMessage:true})\r\n            this.setState({hasLoginFailed:false})\r\n        }\r\n        else {\r\n            this.setState({showSuccessMessage:false})\r\n            this.setState({hasLoginFailed:true})\r\n        }\r\n\r\n        AuthenticationService\r\n        .executeBasicAuthenticationService(this.state.username, this.state.password)\r\n        .then(() => {\r\n            AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\r\n            this.props.history.push(`/welcome/${this.state.username}`)\r\n        }).catch( () =>{\r\n            this.setState({showSuccessMessage:false})\r\n            this.setState({hasLoginFailed:true})\r\n        })\r\n        AuthenticationService\r\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\r\n            .then((response) => {\r\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\r\n                this.props.history.push(`/welcome/${this.state.username}`)\r\n            }).catch(() => {\r\n                this.setState({ showSuccessMessage: false })\r\n                this.setState({ hasLoginFailed: true })\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <div className=\"container\">\r\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials or something is wrong</div>}\r\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\r\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\r\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}