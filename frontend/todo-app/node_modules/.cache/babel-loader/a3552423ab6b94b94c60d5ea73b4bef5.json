{"ast":null,"code":"import _classCallCheck from \"D:\\\\RMIT\\\\SEPT\\\\A1\\\\NewBranch\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\RMIT\\\\SEPT\\\\A1\\\\NewBranch\\\\High5\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport {\n/*API_URL, */\nJPA_API_URL } from '../../Constants';\n\nvar WallDataService =\n/*#__PURE__*/\nfunction () {\n  function WallDataService() {\n    _classCallCheck(this, WallDataService);\n  }\n\n  _createClass(WallDataService, [{\n    key: \"retrieveAllVisiblePosts\",\n    value: function retrieveAllVisiblePosts(name) {\n      //console.log('executed wall service')\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/wall\"));\n    } //If the request is successful, a message advising the success is sent\n    //otherwise a bad requet is recieved and sent\n\n    /*\r\n    deletePost(name, id) {\r\n      \t//console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${studentId}/Posts/${id}`, result);\r\n    }*/\n\n  }, {\n    key: \"retrievePost\",\n    value: function retrievePost(name, studentId, id) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/wall/\").concat(studentId, \"/\").concat(id));\n    } //the new post is sent to the server. If the student Ids don't match\n    //a bad request is returned\n\n  }, {\n    key: \"createPost\",\n    value: function createPost(name, studentId, post) {\n      //console.log('executed service')\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/wall/\").concat(studentId), post);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(name, studentId, post, parentPostId) {\n      //console.log('executed service')\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/wall/\").concat(studentId, \"/\").concat(parentPostId), post);\n    }\n  }, {\n    key: \"editPost\",\n    value: function editPost(name, studentId, post) {\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/wall/\").concat(studentId), post);\n    }\n  }]);\n\n  return WallDataService;\n}();\n\nexport default new WallDataService();","map":{"version":3,"sources":["D:\\RMIT\\SEPT\\A1\\NewBranch\\High5\\frontend\\todo-app\\src\\api\\todo\\WallDataService.js"],"names":["axios","JPA_API_URL","WallDataService","name","get","studentId","id","post","parentPostId"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AAAS;AAAaC,WAAtB,QAAyC,iBAAzC;;IAEMC,e;;;;;;;;;4CAEsBC,I,EAAM;AAC1B;AACA,aAAOH,KAAK,CAACI,GAAN,WAAaH,WAAb,oBAAkCE,IAAlC,WAAP;AACH,K,CAED;AACA;;AACA;;;;;;;;iCAOaA,I,EAAME,S,EAAWC,E,EAAI;AAC9B;AACA,aAAON,KAAK,CAACI,GAAN,WAAaH,WAAb,oBAAkCE,IAAlC,mBAA+CE,SAA/C,cAA4DC,EAA5D,EAAP;AACH,K,CAED;AACA;;;;+BACWH,I,EAAME,S,EAAWE,I,EAAM;AAC9B;AACA,aAAOP,KAAK,CAACO,IAAN,WAAcN,WAAd,oBAAmCE,IAAnC,mBAAgDE,SAAhD,GAA6DE,IAA7D,CAAP;AACH;;;kCAEaJ,I,EAAME,S,EAAWE,I,EAAMC,Y,EAAc;AACnD;AACI,aAAOR,KAAK,CAACO,IAAN,WAAcN,WAAd,oBAAmCE,IAAnC,mBAAgDE,SAAhD,cAA6DG,YAA7D,GAA6ED,IAA7E,CAAP;AACH;;;6BAEQJ,I,EAAME,S,EAAWE,I,EAAM;AAC/B,aAAOP,KAAK,CAACO,IAAN,WAAcN,WAAd,oBAAmCE,IAAnC,mBAAgDE,SAAhD,GAA6DE,IAA7D,CAAP;AACA;;;;;;AAIL,eAAe,IAAIL,eAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nimport { /*API_URL, */JPA_API_URL } from '../../Constants'\r\n\r\nclass WallDataService {\r\n   \r\n    retrieveAllVisiblePosts(name) {\r\n        //console.log('executed wall service')\r\n        return axios.get(`${JPA_API_URL}/users/${name}/wall`);\r\n    }\r\n\r\n    //If the request is successful, a message advising the success is sent\r\n    //otherwise a bad requet is recieved and sent\r\n    /*\r\n    deletePost(name, id) {\r\n\r\n    \t//console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${studentId}/Posts/${id}`, result);\r\n    }*/\r\n\r\n    retrievePost(name, studentId, id) {\r\n        //console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${name}/wall/${studentId}/${id}`);\r\n    }\r\n\r\n    //the new post is sent to the server. If the student Ids don't match\r\n    //a bad request is returned\r\n    createPost(name, studentId, post) {\r\n        //console.log('executed service')\r\n        return axios.post(`${JPA_API_URL}/users/${name}/wall/${studentId}`, post);\r\n    }\r\n\r\n    createComment(name, studentId, post, parentPostId) {\r\n    //console.log('executed service')\r\n        return axios.post(`${JPA_API_URL}/users/${name}/wall/${studentId}/${parentPostId}`, post);\r\n    }\r\n\r\n    editPost(name, studentId, post) {\r\n    \treturn axios.post(`${JPA_API_URL}/users/${name}/wall/${studentId}`, post);\r\n    }\r\n\r\n}\r\n\r\nexport default new WallDataService()"]},"metadata":{},"sourceType":"module"}