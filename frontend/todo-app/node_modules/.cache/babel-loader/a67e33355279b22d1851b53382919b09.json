{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\David\\\\Downloads\\\\septProject\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\David\\\\Downloads\\\\septProject\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { JPA_API_URL } from '../../Constants';\nvar studentId = 1;\n\nvar WallDataService =\n/*#__PURE__*/\nfunction () {\n  function WallDataService() {\n    _classCallCheck(this, WallDataService);\n  }\n\n  _createClass(WallDataService, [{\n    key: \"retrieveAllVisiblePosts\",\n    value: function retrieveAllVisiblePosts(name) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/Posts\"));\n    } //If the request is successful, a message advising the success is sent\n    //otherwise a bad requet is recieved and sent\n\n    /*\r\n    deletePost(name, id) {\r\n      \t//console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${studentId}/Posts/${id}`, result);\r\n    }*/\n    //the new post is sent to the server. If the student Ids don't match\n    //a bad request is returned\n\n  }, {\n    key: \"createPost\",\n    value: function createPost(name, post) {\n      //console.log('executed service')\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(studentId, \"/Posts\"));\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(name, post, parentPostId) {\n      //console.log('executed service')\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(studentId, \"/Posts/\").concat(parentPostId), post);\n    }\n  }, {\n    key: \"editPost\",\n    value: function editPost(name, post) {\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(studentId, \"/Posts\"), post);\n    }\n  }]);\n\n  return WallDataService;\n}();\n\nexport default new WallDataService();","map":{"version":3,"sources":["C:\\Users\\David\\Downloads\\septProject\\frontend\\todo-app\\src\\api\\todo\\WallDataService.js"],"names":["axios","JPA_API_URL","studentId","WallDataService","name","get","post","parentPostId"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACC,IAAIC,SAAS,GAAC,CAAd;;IACKC,e;;;;;;;;;4CAIsBC,I,EAAM;AAC1B;AACA,aAAOJ,KAAK,CAACK,GAAN,WAAaJ,WAAb,oBAAkCG,IAAlC,YAAP;AACH,K,CAED;AACA;;AACA;;;;;AAOA;AACA;;;;+BACWA,I,EAAME,I,EAAM;AACnB;AACA,aAAON,KAAK,CAACM,IAAN,WAAcL,WAAd,oBAAmCC,SAAnC,YAAP;AACH;;;kCAEaE,I,EAAME,I,EAAMC,Y,EAAc;AACxC;AACI,aAAOP,KAAK,CAACM,IAAN,WAAcL,WAAd,oBAAmCC,SAAnC,oBAAsDK,YAAtD,GAAsED,IAAtE,CAAP;AACH;;;6BAEQF,I,EAAME,I,EAAM;AACpB,aAAON,KAAK,CAACM,IAAN,WAAcL,WAAd,oBAAmCC,SAAnC,aAAsDI,IAAtD,CAAP;AACA;;;;;;AAML,eAAe,IAAIH,eAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nimport { JPA_API_URL } from '../../Constants'\r\n var studentId=1;\r\nclass WallDataService {\r\n   \r\n\r\n\r\n    retrieveAllVisiblePosts(name) {\r\n        //console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${name}/Posts`);\r\n    }\r\n\r\n    //If the request is successful, a message advising the success is sent\r\n    //otherwise a bad requet is recieved and sent\r\n    /*\r\n    deletePost(name, id) {\r\n\r\n    \t//console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${studentId}/Posts/${id}`, result);\r\n    }*/\r\n\r\n    //the new post is sent to the server. If the student Ids don't match\r\n    //a bad request is returned\r\n    createPost(name, post) {\r\n        //console.log('executed service')\r\n        return axios.post(`${JPA_API_URL}/users/${studentId}/Posts`);\r\n    }\r\n\r\n    createComment(name, post, parentPostId) {\r\n    //console.log('executed service')\r\n        return axios.post(`${JPA_API_URL}/users/${studentId}/Posts/${parentPostId}`, post);\r\n    }\r\n\r\n    editPost(name, post) {\r\n    \treturn axios.post(`${JPA_API_URL}/users/${studentId}/Posts`, post);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default new WallDataService()"]},"metadata":{},"sourceType":"module"}